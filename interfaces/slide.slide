Como testar unitariamente e porque usar interfaces
Tags: interfaces, tests, golang

Pedro Fadel
Pedreiro de Software, Stone
pfadel@stone.com.br
@justpedrofadel
Dúvidas, perguntas, comentários ?
github.com/PFadel/go-presentations

* Agenda

- O que define um teste unitário ?
- O que define um teste de integração ?
- Por que precisamos de diferentes tipos de testes ?
- Como mockar ?
- Mockery
- Fx
- Conclusão e Fontes
- Dúvidas e Perguntas

* O que define um teste unitário ?

* O que define um teste unitário ?

É o level de teste de software onde unidades individuais do software são testadas. O objetivo é validar que cada unidade do software funciona como foi planejada. *Uma* *unidade* *é* *a* *menor* *parte* *testável* *de* *qualquer* *software*.

Fonte:
.link http://softwaretestingfundamentals.com/unit-testing/

* O que é a menor unidade testável em Go ?

* Exemplo 1:
.code exemplo1.go HLxxx

* Testando Exemplo 1:
.code test1.go HLxxx

* Ainda Exemplo 1... :
.code exemplo1incompleto.go HLxxx

* O que define um teste de integração ?
É o level de teste de software onde *unidades* *individuais* *são* *combinadas* *e* *testadas* *como* *um* *grupo*. O objetivo é expor falhas na interação entre as unidades integradas.

Fonte:
.link http://softwaretestingfundamentals.com/integration-testing/

* Por que precisamos de diferentes tipos de testes ?

.image images/unittesting.jpg

* Imagine... Somente testes de integração

- Seu programa tem duas unidades.
- Durante os testes, você encontra um bug.
- Como você determina a fonte do bug ?
-- O bug está na unidade 1 ?
-- O bug está na unidade 2 ?
-- O bug está nas duas unidades ?
-- O bug está na interface entre as unidades ?
-- O bug está no test ou test case ?

* Imagine... Somente testes unitários

"A NASA review board found that the problem was in the software controlling the orbiter’s thrusters. The software calculated the force that the thrusters needed to exert in pounds of force. A second piece of code that read this data assumed it was in the metric unit—“newtons per square meter”."

Fonte:
.link https://www.simscale.com/blog/2017/12/nasa-mars-climate-orbiter-metric/

* Ou seja, precisamos de testes unitários e de integração!

.image images/both.gif

* Mas como garantir que unitários são unitários de verdade ?

* Solução ? Mocks!
O ato de "mocking" ou "mockar" é a criação de objetos falsos que simulam o comportamento de objetos reais.

Fonte:
.link https://www.typemock.com/what-is-mocking/

* Como mockar ?

No Python...
.image images/python-mock.png

Fonte:
.link https://docs.python.org/3/library/unittest.mock.html

* Tentando reproduzir em Go...

Não fica legal...
.image images/monkey_patch.png

Usando a lib:
.link https://github.com/bouk/monkey

* Solução ?

Interfaces!

.image images/super.png

* Como ficaria o exemplo anterior...

.code exemplo2.go HLxxx

* Como ficaria o mock...

.code test2.go /START OMIT/,/END OMIT/ HLxxx

* ... e o teste.

.code test2.go /^func TestAbs/,/^}/ HLxxx

* Mas e interfaces grandes ?...

.image images/biginterface.png

* Importante lembrar ...

"The bigger the interface, the weaker the abstraction."

.image images/jedigopher.png

Fonte:
.link https://go-proverbs.github.io/

* Solução ?

Mockery!

.image images/mockery.png

Fonte:
.link https://github.com/vektra/mockery

* Como usar

 mockery -dir {origem} -name {name} --output={destino}

.image images/gencode.png

* E nos testes...

.image images/mocktests.png

* Beleza, mas e inicialização da aplicação ?
Cada objeto vai ser responsável por n interfaces?

.image images/confusion.png

* Solução ?

FX! Injeção de dependência em Go feito pelo Uber. (:

.image images/fx.png

Fonte:
.link https://github.com/uber-go/fx

* Como funciona ?

.code fx.go

Fonte:
.link https://godoc.org/go.uber.org/fx

* Conclusão
.image images/thatsallfolks.gif

* Perguntas ?
.image images/ask-questions.gif

* Fontes
.link https://docs.python.org/3/library/unittest.mock.html
.link http://softwaretestingfundamentals.com/unit-testing/
.link http://softwaretestingfundamentals.com/integration-testing/
.link https://github.com/bouk/monkey
.link https://www.typemock.com/what-is-mocking/
.link https://www.simscale.com/blog/2017/12/nasa-mars-climate-orbiter-metric/
.link https://go-proverbs.github.io/
.link https://github.com/vektra/mockery
.link https://github.com/uber-go/fx
.link https://godoc.org/go.uber.org/fx
